library(jsonlite)
library(httpuv)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
oauth_endpoints
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/johanalva/", gtoken)
content(req)
req$content
raw.data <- rawToChar(req$content)
json <- fromJSON(raw.data)
View(json)
req <- GET("https://api.github.com/repos/johanalva/issues", gtoken)
content(req)
req$content
raw.data <- rawToChar(req$content)
json <- fromJSON(raw.data)
View(json)
req <- GET("https://api.github.com/repos/johanalva/issue", gtoken)
content(req)
library(jsonlite)
library(httpuv)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
oauth_endpoints
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/johanalva/issue", gtoken)
content(req)
req$content
raw.data <- rawToChar(req$content)
json <- fromJSON(raw.data)
View(json)
raw.data
req <- GET("https://api.github.com/repos/johanalva/issues", gtoken)
content(req)
req$content
raw.data <- rawToChar(req$content)
json <- fromJSON(raw.data)
View(json)
GET("https://api.zenhub.io/p1/repositories/95308419/issues", gtoken)
GET("https://api.github.com/repos/johanalva/issues", gtoken)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
oauth_endpoints
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/repos/johanalva/issues", gtoken)
req
req <- GET("https://api.github.com/repos/johanalva/", gtoken)
req
req <- GET("https://api.github.com/repos/johanalva/issues", gtoken)
req
GET("https://api.github.com/repos/johanalva/issues", gtoken)
req <- GET("https://api.github.com/repos/johanalva/issues/2", gtoken)
req
gtoken
GET("https://api.github.com/repos/johanalva/issues/2", gtoken)
req <- GET("https://api.github.com/repos/johanalva/issues/1", gtoken)
req
library(XML)
library(RCurl)
library(jsonlite)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
library(httr)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
library(jsonlite)
library(httpuv)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/johanalva/IBMTrello/issues", gtoken)
GET("https://api.github.com/repos/johanalva/IBMTrello/issues",
query = list(Token =  gtoken))
GET("https://api.github.com/repos/johanalva/IBMTrello/issues",
query = list(api_key =  key,
issues = 2))
GET("https://api.github.com/repos/johanalva/IBMTrello/issues",
query = list(api_key =  key,
issues = 1))
get.data <- GET("https://api.github.com/repos/johanalva/IBMTrello/issues",
query = list(api_key =  key,
issues = 1))
emory.data <- content(get.data)
emory.data
class(emory.data)
names(emory.data)
names(emory.data$results[[1]])
emory.data
names(emory.data$body)
library(httr)
install.packages("googleAuthR")
library(googleAuthR)
github_api <- function(path){
url <- modify_url("https://api.github.com", path = path)
GET(url)
}
resp <- github_api("/repos/johanalva/httr")
resp
resp <- github_api("/repos/johnalva/httr")
resp
resp <- github_api("/johnalva/httr")
resp
resp <- github_api("/johnalva/IBMTrello")
resp
resp <- github_api("/johanalva/IBMTrello")
resp
resp <- github_api("/repos/hadley/httr")
resp
resp <- github_api("/repos/hadley/httr", gtoken)
resp <- github_api("/repos/johanalva", gtoken)
github_api <- function(path){
url <- modify_url("https://api.github.com", path = path)
GET(url, gtoken)
}
resp <- github_api("/repos/johanalva")
resp
resp <- github_api("/repos/johanalva/")
resp
resp <- github_api("/repos/johanalva/IBMTrello/issues")
resp
GET("http://www.colourlovers.com/api/color/6B4106?format=xml")
resp$content
http_type(resp)
parsed <- jsonlite::fromJSON(content(resp, "text"), simplifyVector = FALSE)
parsed
library(RCurl)
library(RJSONIO)
httpGET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=5eac5090-5bab-40db-b9fa-04b976d09bb8&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
httpGET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=f0f14e3a-26ef-4b02-a0c5-46bc4a55b868&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
httput <- httpPUT("https://api.ibm.com/watsonanalytics/run/oauth2/v1/config",
content = toJSON(list('clientName' = "johnalva",
'redirectURIs' = "https://localhost:8080" ,
"ownerName" = "johnalva",
"ownerEmail" = "johnalva@cr.ibm.com",
"ownerCompany" = "IBM",
"ownerPhone" = "85347012")),
.opts = list(httpheader = c('Content-Type' = 'application/json',
'X-IBM-Client-Secret' = 'N0oD5dE3wD1iE7xR4oI5eR3oU1yK4gN4uE2kV1gK3oY0fK0oX7',
'X-IBM-Client-Id' = '12e62179-dd02-4802-88c6-4280cb8d91cd')))
httput
fromJSON(httput)
httpGET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=5eac5090-5bab-40db-b9fa-04b976d09bb8&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
GET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=5eac5090-5bab-40db-b9fa-04b976d09bb8&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
library(httr)
GET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=5eac5090-5bab-40db-b9fa-04b976d09bb8&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
GET("https://api.ibm.com/watsonanalytics/run/content/v1/folders", .opts = list(httpheader = c('X-IBM-Client-Secret' = 'dG5kL6lC7cG4xN2uR7xQ6hS3mI7fF5hY6iX2lX2jU7eB2hS5qP', 'X-IBM-Client-Id' = '5eac5090-5bab-40db-b9fa-04b976d09bb8', 'Authorization' = '%2FBu%2BAwKfUSRIncl3eQ5oZRumIuXfkvPBzfsqJu7NuytqJ0r33kKxQqtp2Pb3i2SCPdjr39ue9qXPnr16PJwbmeWwHVUrcro5KmGhLBi13hG%2FJq7yJhp6eksFiZyJIZaUKzLJ%2BtrRVkddqa1gF4LPys0VD3by1PY3ZDTMcZ5WDxhi3RVMRgxq3pbQx3DQIHQZczbeIBb900qZvOItQpCT%2BP5tsi6lGTBN7S0rB%2Bb0jnsrwgVxESDdX8E49RqixJrUore6cAh8vGdkcdM%2F8KrB7fNhr%2BrwedzvQtxFEeNiKcYfhK2Mi%2B%2FerA%3D%3D')))
httpGET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=f0f14e3a-26ef-4b02-a0c5-46bc4a55b868&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
GET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=f0f14e3a-26ef-4b02-a0c5-46bc4a55b868&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
accT <- GET("https://w3id.sso.ibm.com/isam/oidc/endpoint/amapp-runtime-oidcidp/authorize?client_id=YjlhYTU1YzEtMTBkYy00&scope=openid&response_type=code&redirect_uri=https%3A%2F%2Fwatson.analytics.ibmcloud.com%3A443%2Fwatsonanalytics%2Fopenid%2Fcode%2Fw3id&state=string/accessToken")
accT
apic <- oauth_app("watsonanalytics", key, secret)
rq <- "https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/requestToken"
au <- "https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/authorize"
ac <- "https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/accessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
oauth2.0_token(endpoint =  otep, app =  apic)
GET("https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/accessToken")
GET("https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/accessToken" .opts = list(httpheader = c('accept' = 'application/json')))
httpGET("https://api.ibm.com/watsonanalytics/run/oauth2/v1/token/accessToken" .opts = list(httpheader = c('accept' = 'application/json')))
GET("https://api.ibm.com/watsonanalytics/run/clientauth/v1/auth?client_id=f0f14e3a-26ef-4b02-a0c5-46bc4a55b868&redirect_uri=http://localhost:5447/demo/oauth2/code&response_type=code&scope=userContext&state=string", .opts = list(httpheader = c('accept' = 'application/json')))
authors <- data.frame(
surname = c("Tukey","Venables","Tierney","Ripley","McNeil"),
nacionality = c("US","Australia","US","UK","Australia"),
deceased = c("yes",rep("no",4))
)
books <- data.frame(
name = c("Tukey","Venables","Tierney","Ripley","McNeil", "Tierney"),
title = c("Exploratory Data Analysis",
"LISP-STAT",
"Spatial Statistics",
"Interactive Data Analysis",
"An Introduction to R")
)
books <- data.frame(
name = c("Tukey","Venables","Tierney","Ripley","McNeil", "Tierney", "R Core"),
title = c("Exploratory Data Analysis",
"LISP-STAT",
"Spatial Statistics",
"Interactive Data Analysis",
"An Introduction to R")
)
books <- data.frame(
name = c("Tukey","Venables","Tierney","Ripley","McNeil", "Tierney", "R Core"),
title = c("Exploratory Data Analysis",
"LISP-STAT",
"Spatial Statistics",
"Interactive Data Analysis",
"An Introduction to R")
)
books <- data.frame(
name = c("Tukey","Venables","Tierney","Ripley","McNeil", "R Core"),
title = c("Exploratory Data Analysis",
"Modern Applied Stadistics ..."
"LISP-STAT",
"Spatial Statistics",
"Interactive Data Analysis",
"An Introduction to R")
)
books <- data.frame(
name = c("Tukey","Venables","Tierney","Ripley","McNeil", "R Core"),
title = c("Exploratory Data Analysis",
"Modern Applied Stadistics ...",
"LISP-STAT",
"Spatial Statistics",
"Interactive Data Analysis",
"An Introduction to R")
)
View(authors)
View(books)
m4 <- merge(authors, books, by.x = "surname", by.y = "name", all.x = TRUE)
View(m4)
merge(authors, books, by.x = "surname", by.y = "name", all.x = TRUE)
merge(authors, books, by.x = "surname", by.y = "name")
library(dplyr)
match(authors$surname, books$name)
books$name[match(authors$surname, books$name)]
merge(authors, books, by.x = "surname", by.y = "name")
books$nameValidate <- books$name[match(authors$surname, books$name)]
books$name[match(authors$surname, books$name)]
books$nameValidate <- books$name[match(authors$surname, books$name)]
books$nameValidate = books$name[match(authors$surname, books$name)]
authors$surnameValidate <- books$name[match(authors$surname, books$name)]
authors
books$name[match(authors$surname, books$name)]
books$title[match(authors$surname, books$name)]
authors$surnameValidate <- books$title[match(authors$surname, books$name)]
authors
shiny::runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/Analytics&QualityReport/Shiny')
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
key <- input$key
secret <- input$secret
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
key <- "d00e8afb53f716936477840488ad72f5"
secret <- "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f"
my_token <- trello_get_token(key = key, secret = secret, appname = "trello")
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
library(shiny)
library(plotly)
library(rpivotTable)
library(DT)
library(shinydashboard)
library(httr)
library(plyr)
library(magrittr)
library(lubridate)
library(trelloR)
library(jsonlite)
library(rpivotTable)
library(dplyr)
library(stringr)
library(ggplot2)
library(Hmisc)
my_token <- trello_get_token(key = key, secret = secret, appname = "trello")
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
raws <- rawToChar(req$content)
raws
my_token <- trello_get_token(key = key, secret = secret, appname = "trello")
my_token
req <- httr::GET(ae, my_token, paging = TRUE)
req
my_token <- trello_get_token(key = key, secret = secret, appname = "trello")
trello_get_token(key = key, secret = secret, appname = "trello")
my_token <- trello_get_token(key = key, secret = secret, appname = "trello")
my_token
req <- httr::GET(ae, my_token, paging = TRUE)
req
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
my_token
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
raws
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
library(httr)
library(plyr)
library(magrittr)
library(lubridate)
library(trelloR)
library(httr)
library(jsonlite)
library(rpivotTable)
library(dplyr)
library(stringr)
library(plotly)
library(ggplot2)
load("C:/Users/johnalva/Desktop/ConectionTrello.RData")
jf <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
req <- httr::GET(jf, my_token, paging = TRUE)
json <- httr::content(req, paging = TRUE)
json
my_token <- oauth1.0_token(otep, apic)
my_token
req <- httr::GET(ae, my_token, paging = TRUE)
req
oauth_endpoints("trello")
library(jsonlite)
library(httpuv)
library(httr)
oauth_endpoints("trello")
oauth_endpoints
?oauth_endpoints
aut <- "https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92"
aut <- GET("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92")
aut
aut <- BROWSE("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92")
aut <- GET("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92")
aut
aut <- GET(BROWSE("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92"))
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
aut <- ("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92")
my_token <- oauth1.0_token(aut, apic)
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
req
myapp <- oauth_app(appname = "Suscribe",
key = "63673c02b3491618cd92",
secret = "800cb936e09f148e44eb4af35e76cb84f420717e")
aut <- ("https://trello.com/1/authorize?expiration=never&name=SinglePurposeToken&key=63673c02b3491618cd92")
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
my_token <- oauth1.0_token(aut, apic)
Sys.setenv("HTTR_SERVER_PORT" = "1410/")
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
req
raws
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
req
library(trelloR)
trello_get_token("d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
source('~/.active-rstudio-document', echo=TRUE)
runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/Analytics&QualityReport/token')
my_token
req
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
ae <- "https://trello.com/b/i4u41Lhr/analytics-sdr.json"
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
raws <- rawToChar(req$content)
this.content <- fromJSON(raws)
shiny::runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/Analytics&QualityReport/Shiny')
runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/Analytics&QualityReport/Shiny')
runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/IBMTrelloReport/Shiny')
shiny::runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloApi619V1')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/IBMTrelloCollections')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
shiny::runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp('C:/Users/johnalva/Box Sync/My Documents/R/IBMTrelloCollections')
ae <- "https://trello.com/b/HwHVEJcK/aecom-trello"
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
ae <- paste0(ae,".json")
json <- httr::content(req, paging = TRUE)
ibd2 <- get_id_board(ae, my_token)
cards <- sapply(json$cards, function(x) c(x$id,x$name,x$dateLastActivity,
x$idList, x$closed, x$desc))
cards <- data.frame(t(cards), stringsAsFactors=FALSE)
names(cards) <- c('idCard','cardName','dateLastActivity','idList','closed',
'description')
cards$dateLastActivity <- as.POSIXct(strptime(paste0(cards$dateLastActivity),
tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"))-(6*3600)
cards$dateLastActivity <- as.POSIXct(strptime(paste0(cards$dateLastActivity),
tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"))-(6*3600)
cards <- sapply(json$cards, function(x) c(x$id,x$name,x$dateLastActivity,
x$idList, x$closed, x$desc))
cards
cards <- data.frame(t(cards), stringsAsFactors=FALSE)
cards
ibd2 <- get_id_board(ae, my_token)
cards <- sapply(json$cards, function(x) c(x$id,x$name,x$dateLastActivity,
x$idList, x$closed, x$desc))
cards <- data.frame(t(cards), stringsAsFactors=FALSE)
names(cards) <- c('idCard','cardName','dateLastActivity','idList','closed',
'description')
cards
ae <- paste0(ae,".json")
ae
ae <- "https://trello.com/b/HwHVEJcK/aecom-trello"
apic <- oauth_app("trello", "d00e8afb53f716936477840488ad72f5", "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f")
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
req <- httr::GET(ae, my_token, paging = TRUE)
json <- httr::content(req, paging = TRUE)
ibd2 <- get_id_board(ae, my_token)
cards <- sapply(json$cards, function(x) c(x$id,x$name,x$dateLastActivity,
x$idList, x$closed, x$desc))
cards <- data.frame(t(cards), stringsAsFactors=FALSE)
names(cards) <- c('idCard','cardName','dateLastActivity','idList','closed',
'description')
cards
req
json <- httr::content(req, paging = TRUE)
json
cards <- sapply(json$cards, function(x) c(x$id,x$name,x$dateLastActivity,
x$idList, x$closed, x$desc))
cards
cards <- data.frame(t(cards), stringsAsFactors=FALSE)
cards
runApp('C:/Users/johnalva/Box Sync/My Documents/RExecutable/IBMTrelloReport/Shiny')
setwd("C:/Users/johnalva/Box Sync/My Documents/RExecutable/IBMTrelloReport/Shiny")
shiny::runApp()
runApp()
runApp('C:/Users/johnalva/Box Sync/My Documents/R/TrelloDataCollection-IBM')
runApp()
ae <- "https://trello.com/b/HwHVEJcK/aecom-trello"
key <- input$key
secret <- input$secret
key <- "d00e8afb53f716936477840488ad72f5"
secret <- "7e46b4cff5903e5c74d88cc26fa262a1b347edacfabe7b95157f6ca52c67aa7f"
apic <- oauth_app("trello", key, secret)
rq <- "https://trello.com/1/OAuthGetRequestToken"
au <- "https://trello.com/1/OAuthAuthorizeToken"
ac <- "https://trello.com/1/OAuthGetAccessToken"
otep <- oauth_endpoint(rq, au, ac, ae)
my_token <- oauth1.0_token(otep, apic)
otep <- oauth_endpoint(rq, au, ac, ae)
options(httr_oauth_cache=FALSE)
my_token <- oauth1.0_token(otep, apic)
options(httr_oauth_cache=FALSE)
ae <- paste0(ae, ".json")
req <- httr::GET(ae, my_token, paging = TRUE)
req
json <- httr::content(req, paging = TRUE)
ibd2 <- get_id_board(ae, my_token)
